// @cliDescription Rebuilds the ui registry.
module.exports = async function (context) {
  const { print, filesystem, strings } = context
  const { pascalCase, trim } = strings

  // The order is important here. Modules earlier in the list cannot use
  // modules later in the list.
  const categories = ['basics', 'components', 'layouts', 'screens']
  // we leave navigation & theme left out of this list

  // everything will get put here
  const output = []

  output.push(`// This file is code-generated by running:`)
  output.push(`//`)
  output.push(`//   $ ignite generators make-registry`)
  output.push('')

  // go thru each of the categories
  categories.map(dir => {
    // find all immediate sub-directories
    const dirs = filesystem.cwd(`src/ui/${dir}`).find({
      matching: '*',
      files: false,
      recursive: false,
      directories: true
    })

    // do we have any?
    if (dirs.length > 0) {
      // add an export line for each sub-directory
      dirs.forEach(line => {
        const contents = filesystem.read(`src/ui/${dir}/${line}/${line}.js`)
        const isDefault = contents.includes('export default')
        if (isDefault) {
          output.push(
            `export const ${pascalCase(line)} = require('./${dir}/${line}/${line}').default`
          )
        } else {
          output.push(
            `export { ${pascalCase(line)} } from './${dir}/${line}/${line}'`
          )
        }
        // some may have a container to come along too
        const hasContainer = filesystem.exists(`./src/ui/${dir}/${line}/${line}.container.js`)
        if (hasContainer) {
          output.push(
            `export const ${pascalCase(line)}Container = require('./${dir}/${line}/${line}.container').default`
          )
        }
      })
      // push a gap
      output.push('')
    }
  })

  const content = trim(output.join('\n'))
  filesystem.write('src/ui/index.js', content + '\n')
  print.info(`  ${print.colors.success(print.checkmark)} ui registry rebuilt`)
}
